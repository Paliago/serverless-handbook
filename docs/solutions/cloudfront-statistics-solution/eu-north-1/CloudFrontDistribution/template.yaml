AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: Creates the infrastructure for hosting the static content
Parameters:
  ApplicationName:
    Type: String
    Description: The application that owns this setup.
  BucketNameSuffix:
    Type: String
    Description: The last part of the bucket name. Full name will be {ApplicationName}-{BucketNameSuffix}
  DataIngestlambdaArn:
    Type: String
    Description: The ARN to the Lambda@Edge function handing statistics data

Resources:
  ContentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${ApplicationName}-${BucketNameSuffix}
      Tags:
        - Key: Application
          Value: !Ref ApplicationName

  ContentBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ContentBucket
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub ${ContentBucket.Arn}/*
            Principal:
              Service: cloudfront.amazonaws.com
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}

  CloudFrontOAC:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Description: !Sub OAC for ${ApplicationName}
        Name: !Sub ${ApplicationName}-oac
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  HeadersEnabledOriginRequestPolicy:
    Type: AWS::CloudFront::OriginRequestPolicy
    Properties:
      OriginRequestPolicyConfig:
        Name: HeadersEnabledOriginRequestPolicy
        Comment: Headers added OriginRequestPolicy
        CookiesConfig:
          CookieBehavior: none
        QueryStringsConfig:
          QueryStringBehavior: none
        HeadersConfig:
          HeaderBehavior: whitelist
          Headers:
            - CloudFront-Viewer-Country
            - CloudFront-Viewer-Country-Name
            - CloudFront-Is-Mobile-Viewer
            - CloudFront-Is-Desktop-Viewer
            - CloudFront-Is-Tablet-Viewer

  CloudFrontFunctionIndexPath:
    Type: AWS::CloudFront::Function
    Properties:
      Name: CloudFrontFunctionWebServerIndex
      AutoPublish: true
      FunctionCode: !Sub |
        function handler(event) {
          var request = event.request;
          var uri = request.uri;
          uri = uri.replace(/\/$/, '\/index.html');
          var regex = /^.+\.[a-zA-Z0-9]{2,4}?$/;
          var matched = uri.match(regex)
          if(!uri.match(regex)){
              uri = uri + "/index.html"
          }
          request.uri = uri;
          
          return request;
        }
      FunctionConfig:
        Comment: !Sub Append index.html to folder paths for S3 Bucket ${ApplicationName}
        Runtime: cloudfront-js-2.0

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Sub Distribution for the ${ApplicationName}
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: "/404.html"
        DefaultCacheBehavior:
          AllowedMethods:
            - "GET"
            - "HEAD"
            - "OPTIONS"
          Compress: False
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad #Managed Cache Policy 'CachingDisabled'
          OriginRequestPolicyId: !Ref HeadersEnabledOriginRequestPolicy
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN: !GetAtt CloudFrontFunctionIndexPath.FunctionMetadata.FunctionARN
          LambdaFunctionAssociations:
            - EventType: origin-request
              LambdaFunctionARN: !Ref DataIngestlambdaArn
          TargetOriginId: !Sub ${ApplicationName}-dynamic-s3
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: True
        Origins:
          - DomainName: !Sub ${ApplicationName}-${BucketNameSuffix}.s3.amazonaws.com
            Id: !Sub ${ApplicationName}-dynamic-s3
            OriginAccessControlId: !GetAtt CloudFrontOAC.Id
            S3OriginConfig:
              OriginAccessIdentity: ""
        PriceClass: PriceClass_100
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: Name
          Value: !Sub ${ApplicationName}
